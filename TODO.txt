TODO
====

- remove the silly ring thing




must haves
----------

sling windows to hot spots with shortcuts
  maximize toggle
  half screen
  vert max
  horz max
  move between screens

toggleable borders

===> USABLE WM!!



think about
-----------

still want to make use of long-press somehow. previous incarnation used
timing to finish focus switching but this was clumsy. other ideas: hold
super lock on a resize/move drag? open up a visual window list?

fullscreen is implemented simply by resizing the window so its borders
are outside the screen. this works but ...

super+escape to lower windows is ok; but i want to cycle windows based on
where i remember they were, eg: i know i've got an xclock in top left, i
want to put mouse in top left, hit a key a few times, see the clock, then
mru back to the window i was just looking at. maybe: mod+c would do the
same as mod-tab but restricted to windows whose bounds contain cursor. ...
actually can't we get this with super+escape anyway? just don't let the
focus history change until the super key is released, just like super-tab!
but the original spirit of super+escape is: i'm finished with this win for
the moment, send it to the back so it doesn't bother me for a while.

resizing/moving small windows - the region thing doesn't really work that
well.



bugs
----

ha they're never ending. lower while focus switching is active. bugged.

snaps from other screens are present on other screens

multi-screen snap polish:
shouldn't be able to snap to the outside of other screens bounds

the other day, my gl window closed and then it seemed the whole thing
was frozen; could not change focus or anything; but no busy loop and
no crash. should do a time-based periodic debug dump.

when i close a firefox window the whole process dies
https://unix.stackexchange.com/questions/491139/is-closing-the-window-of-a-x-client-application-process-necessarily-followed-by

switching focus with kbd can leave stale state:
clicking in unfocused win does nothing
clicks should focus

when i spawn a term, it doesn't get focus.
what about: an action which spawns a new prog which
creates a brief window during which the next mapped window
may take focus. but at all other times newly mapped windows
may not take focus. hmmm. maybe newly mapped windows should
just get focus.

border width affects context menu behaviour in firefox. anything more than
2px (?) and the click which opens the context menu also triggers the menu
item under the click! my guess: firefox creates the context menu window
with absolute screen coords, and doesn't account for the border width.



technical
---------

really need lens - so much silly boiler plate atm

json log out?

todo revise author

generalized bindings, mouse / keys, eg: configurable from one place

logging with levels

think about how to write a log on keypress with state info,
which is currently not trivial

understand how grabbing raw mod-keys impacts things like sxhkd.
why can't i bind mods and also bind mod-ret from sxhkd?

rethink bindings: BindAction
is there a better way?

rethink the configurerequest-maprequest lifecycle.
some windows (firefox) will send config before map

better to delete windows on unmap than wait for destroy?

logging - how to log from anywhere without trace and without crazy monad?



and then...
-----------

preserve stack order during switching

mouse cursor change when hold mod; change based on pos in window

scroll through windows under mouse

minimize

move window colour to conf

ensure adapt to screen resize

double click expand in dir

desktops? configuration registers?

window menu / list and selection.
eg: hold mod4,
get a visual menu with list of windows,
click on them to focus/raise,
right click to minimize

how to resize one-handed?

can i bind mod4 l & r and still use sxhkd for mod4 binds?
